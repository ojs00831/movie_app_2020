{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/MovieDetail.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["About","props","console","log","className","Movie","id","title","year","summary","poster","genres","to","pathname","state","detailMovieId","src","alt","map","genre","index","key","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","MovieDetail","rating","runtime","description_full","language","mpa_rating","background_image","torrents","torrent","url","quality","seeds","size","Detail","getMovie","location","params","movie_id","history","undefined","push","large_cover_image","Navigation","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b0386ab.chunk.js","sourcesContent":["import React from 'react';\r\nimport './About.css';\r\n\r\nfunction About(props) {\r\n    console.log(props);\r\n    return (\r\n        <div className=\"about__container\">\r\n            <span>\r\n                \"Freedom is the freedom to say that two plus two make four. If that is granted, all else follows.\"\r\n            </span>\r\n            <span>- Geoge Orwell, 1984</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Movie.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Movie({ id, title, year, summary, poster, genres }) {\r\n    return (\r\n        <div className=\"movie\">\r\n            <Link\r\n                to={{\r\n                    pathname: '/movie-detail',\r\n                    state: { detailMovieId : id },\r\n                }}            \r\n            >\r\n                <img src={poster} alt={title} title={title} />\r\n                <div className=\"movie_data\">\r\n                    <h3 className=\"movie__title\">\r\n                        {title}\r\n                    </h3>\r\n                    <h5 className=\"movie__year\">{year}</h5>\r\n                    <ul className=\"movie__genres\">\r\n                        {genres.map((genre, index) => {\r\n                            return (\r\n                                <li key={index} className=\"movie__genre\">\r\n                                    {genre}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                    <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nMovie.propTypes = { \r\n    year: PropTypes.number.isRequired, \r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../components/Movie';\r\nimport './Home.css';\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading : true,\r\n    movies: [],\r\n  };\r\n  \r\n  getMovies = async () => {\r\n    const {\r\n      data : {\r\n        data: { movies },\r\n      },\r\n    } = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');    \r\n    this.setState({ movies, isLoading: false });\r\n  }\r\n\r\n  componentDidMount() {\r\n    // 영화 데이터 로딩!\r\n    this.getMovies();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, movies } = this.state;\r\n    return (\r\n      <section className=\"container\">\r\n        { isLoading \r\n          ? (\r\n              <div className=\"loader\">\r\n                <span className=\"loader__text\">Loading.... </span>\r\n              </div>\r\n            )\r\n          : (\r\n              <div className=\"movies\">\r\n                {movies.map((movie) => (\r\n                    <Movie \r\n                      key={movie.id}\r\n                      id = {movie.id}\r\n                      year = {movie.year}\r\n                      title = {movie.title}\r\n                      summary = {movie.summary}\r\n                      poster = {movie.medium_cover_image}\r\n                      genres = {movie.genres}\r\n                    />            \r\n                 ))}\r\n              </div>\r\n            )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieDetail.css';\r\n\r\nfunction MovieDetail({ id, title, year, rating, runtime, genres, description_full, language, mpa_rating, background_image, torrents }) {\r\n    return (\r\n        <div className=\"movieDetail\">           \r\n            <img src={background_image} alt={title} title={title} />\r\n            <div className=\"movieDetail_data\">\r\n                <h3 className=\"movieDetail__title\">\r\n                    {title}\r\n                </h3>\r\n                <h5 className=\"movieDetail__year\">{year}</h5>\r\n                <h5 className=\"movieDetail__rating\">{rating}</h5>\r\n                <h5 className=\"movieDetail__runtime\">{runtime}</h5>\r\n                <ul className=\"movieDetail__genres\">\r\n                    {genres.map((genre, index) => {\r\n                        return (\r\n                            <li key={index} className=\"movieDetail__genre\">\r\n                                {genre}\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>       \r\n                <h5 className=\"movieDetail__description_full\">{description_full}</h5>\r\n                <h5 className=\"movieDetail__language\">{language}</h5>\r\n                <h5 className=\"movieDetail__mpa_rating\">{mpa_rating}</h5>\r\n                <ul className=\"movieDetail__torrents\">\r\n                    {torrents.map((torrent, index) => {\r\n                        return (\r\n                            <div key={index}>\r\n                                <li className=\"movieDetail__genre\">\r\n                                    {torrent.url}\r\n                                </li>\r\n                                <li>\r\n                                    {torrent.quality}\r\n                                </li>\r\n                                <li>\r\n                                    {torrent.seeds}\r\n                                </li>\r\n                                <li>\r\n                                    {torrent.size}\r\n                                </li>\r\n                            </div>\r\n                        );                        \r\n                    })}\r\n                </ul>   \r\n            </div>         \r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nMovieDetail.propTypes = { \r\n    year: PropTypes.number.isRequired, \r\n    title: PropTypes.string.isRequired,        \r\n    rating: PropTypes.number.isRequired,\r\n    runtime: PropTypes.number.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    description_full: PropTypes.string.isRequired,\r\n    language: PropTypes.string.isRequired,\r\n    mpa_rating: PropTypes.string.isRequired,\r\n    background_image: PropTypes.string.isRequired,    \r\n    torrents: PropTypes.array.isRequired,\r\n\r\n};\r\n\r\nexport default MovieDetail;","import React from 'react';\r\nimport axios from 'axios';\r\nimport MovieDetail from '../components/MovieDetail';\r\nimport './Detail.css';\r\n\r\nclass Detail extends React.Component {\r\n    state = {        \r\n      isLoading : true,\r\n      movie : {},\r\n    };    \r\n\r\n    getMovie = async () => {           \r\n      const{detailMovieId} = this.props.location.state;       \r\n      const {\r\n        data : {\r\n          data: { movie },\r\n        },        \r\n      } = await axios.get('https://yts-proxy.now.sh/movie_details.json', {params: {movie_id: detailMovieId}});    \r\n      this.setState({ isLoading: false, movie });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { location, history } = this.props;            \r\n        if (location.state === undefined) {\r\n            history.push('/');\r\n        }                        \r\n        this.getMovie();\r\n    }\r\n\r\n    render() {\r\n        const { location } = this.props;               \r\n        const { isLoading, movie } = this.state;\r\n        \r\n        if (location.state) {\r\n            return (\r\n                <section className=\"detailContainer\">\r\n                  { isLoading \r\n                    ? (\r\n                        <div className=\"detailLoader\">\r\n                          <span className=\"detailLoader__text\">Loading.... </span>\r\n                        </div>\r\n                      )\r\n                    : (\r\n                        <div className=\"detailMovie\">                          \r\n                            <MovieDetail \r\n                                id = {movie.id}\r\n                                key={movie.id}\r\n                                year = {movie.year}\r\n                                title = {movie.title}                                                                \r\n                                rating = {movie.rating}\r\n                                runtime = {movie.runtime}\r\n                                genres = {movie.genres}\r\n                                description_full = {movie.description_full}\r\n                                language = {movie.language}\r\n                                mpa_rating = {movie.mpa_rating}\r\n                                background_image = {movie.large_cover_image}\r\n                                torrents = {movie.torrents}\r\n\r\n                            />                                       \r\n                        </div>\r\n                      )}\r\n                </section>\r\n              );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Detail;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nfunction Navigation() {\r\n    return (\r\n        <div className=\"nav\">\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\nimport './App.css';\nimport { HashRouter, Route } from 'react-router-dom';\nimport About from './routes/About';\nimport Home from './routes/Home';\nimport Detail from './routes/Detail';\nimport Navigation from './components/Navigation';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie-detail\" component={Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}